name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  tests:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [ '3.11', '3.12' ]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies (test-only)
        run: |
          python -m pip install --upgrade pip
          pip install pytest pytest-cov coverage Flask pandas beautifulsoup4

      - name: Run tests
        run: |
          pytest -q

      - name: Coverage (targeted, exclude flaky)
        run: |
          pytest -q \
            --cov=web_ui/app.py \
            --cov=web_ui/database.py \
            --cov=web_ui/smart_matching_criteria.py \
            --cov=web_ui/robust_revenue_matcher.py \
            --cov=database_utils.py \
            --cov=crypto_pricing.py \
            --cov-report=term-missing \
            --cov-report=xml \
            --cov-report=html:htmlcov \
            --cov-fail-under=80 \
            -k "not app_transactions"

      - name: Upload coverage artifacts
        uses: actions/upload-artifact@v4
        with:
          name: coverage-${{ matrix.python-version }}
          path: |
            coverage.xml
            htmlcov

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install frontend test deps
        run: |
          npm install --no-fund --no-audit

      - name: Run frontend tests with coverage
        run: |
          npm run test:ci

      - name: Install Playwright Browsers
        run: |
          npx playwright install --with-deps

      - name: Seed CSV and start Flask app
        env:
          FLASK_APP: web_ui.app
          DB_TYPE: sqlite
          SQLITE_DB_PATH: e2e_app.sqlite
        run: |
          echo "Date,Description,Amount,classified_entity,confidence,source_file" > MASTER_TRANSACTIONS.csv
          echo "2024-01-01,Sale A,100,EntityA,0.9,seed.csv" >> MASTER_TRANSACTIONS.csv
          echo "2024-01-02,Office Supplies,-30,EntityB,0.7,seed.csv" >> MASTER_TRANSACTIONS.csv
          nohup python -m flask run --port 5001 --no-reload > flask.log 2>&1 &
          npx wait-on http://127.0.0.1:5001

      - name: Run Playwright E2E tests
        env:
          BASE_URL: http://127.0.0.1:5001
        run: |
          npm run test:e2e

      - name: Seed SQLite for app_db and start on 5002
        env:
          DB_TYPE: sqlite
          SQLITE_DB_PATH: appdb.sqlite
          FLASK_APP: web_ui.app_db
        run: |
          python - << 'PY'
          import os, sqlite3
          os.environ['DB_TYPE']='sqlite'
          os.environ['SQLITE_DB_PATH']='appdb.sqlite'
          from web_ui.database import db_manager
          db_manager.db_type='sqlite'
          db_manager.init_database()
          conn=sqlite3.connect('appdb.sqlite')
          cur=conn.cursor()
          cur.execute("INSERT OR REPLACE INTO transactions (transaction_id,date,description,amount,currency,usd_equivalent,classified_entity,source_file) VALUES (?,?,?,?,?,?,?,?)",
                     ('tx-e2e','2024-02-01','E2E Seed Row',42.0,'USD',42.0,'EntityE2E','e2e.csv'))
          conn.commit()
          conn.close()
          PY
          nohup python -m flask run --port 5002 --no-reload > flask_appdb.log 2>&1 &
          npx wait-on http://127.0.0.1:5002

      - name: Run Playwright E2E tests for app_db
        env:
          BASE_URL: http://127.0.0.1:5002
        run: |
          npx playwright test tests-e2e/appdb_integration.e2e.spec.ts
